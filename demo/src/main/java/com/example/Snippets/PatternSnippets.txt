SC
class {classname}
{
    //Change obj type according to your needs
    private static Object obj;
 
    private {classname}() {}
 
    public static Object getInstance()
    {
        if (obj==null)
            obj = new Object();
        return obj;
    }
}
~
STS
class {classname}
{
    //Change obj type according to your needs
    private static volatile Object obj  = null;
    private {classname}() {}
    
    public static Object getInstance()
    {
        if (obj == null)
        {
            // To make thread safe
            synchronized ({classname}.class)
            {
                // check again as multiple threads
                // can reach above step
                if (obj==null)
                    obj = new Object();
            }
        }
        return obj;
    }
}
~
F
class {classname}{

    public static enum Option{
        {options}
    }

    public static {parent} make{parent}(Option option){
        switch(option){
            {case}
            default:
                return null;
        }
    }
}
~